# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CloudfleetCli < Formula
  desc "Cloudfleet Command Line Interface"
  homepage "https://cloudfleet.ai"
  version "0.5.0"

  depends_on "kubernetes-cli" => :recommended

  on_macos do
    url "https://downloads.cloudfleet.ai/cli/0.5.0/cloudfleet_darwin_all.zip"
    sha256 "3c7fdd2bf0f95b5782741b55478ddfb9dbb474607463b1191f0732607bd80106"

    def install
      bin.install "cloudfleet" => "cloudfleet"

      # Install bash completion
      output = Utils.popen_read("#{bin}/cloudfleet completion bash")
      (bash_completion/"cloudfleet").write output

      # Install zsh completion
      output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
      (zsh_completion/"_cloudfleet").write output
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://downloads.cloudfleet.ai/cli/0.5.0/cloudfleet_linux_amd64.zip"
        sha256 "74e4b51701638220c3ece1e661e9f86dddbab50142d613c15a91b9735a8019c6"

        def install
          bin.install "cloudfleet" => "cloudfleet"

          # Install bash completion
          output = Utils.popen_read("#{bin}/cloudfleet completion bash")
          (bash_completion/"cloudfleet").write output

          # Install zsh completion
          output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
          (zsh_completion/"_cloudfleet").write output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://downloads.cloudfleet.ai/cli/0.5.0/cloudfleet_linux_arm64.zip"
        sha256 "05dccddf14f56c6b5388191187c65a5c24735978921cf79fa8200e04756f575d"

        def install
          bin.install "cloudfleet" => "cloudfleet"

          # Install bash completion
          output = Utils.popen_read("#{bin}/cloudfleet completion bash")
          (bash_completion/"cloudfleet").write output

          # Install zsh completion
          output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
          (zsh_completion/"_cloudfleet").write output
        end
      end
    end
  end
end

# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CloudfleetCli < Formula
  desc "Cloudfleet Command Line Interface"
  homepage "https://cloudfleet.ai"
  version "0.6.15"

  depends_on "kubernetes-cli" => :recommended

  on_macos do
    url "https://downloads.cloudfleet.ai/cli/0.6.15/cloudfleet_darwin_all.zip"
    sha256 "0a16a31898611eb4994159a9a12c4f01502b85e182837452fbcdd65c17ce3ee0"

    def install
      bin.install "cloudfleet" => "cloudfleet"

      # Install bash completion
      output = Utils.popen_read("#{bin}/cloudfleet completion bash")
      (bash_completion/"cloudfleet").write output

      # Install zsh completion
      output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
      (zsh_completion/"_cloudfleet").write output
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://downloads.cloudfleet.ai/cli/0.6.15/cloudfleet_linux_amd64.zip"
      sha256 "8c66974ce505c132bd25bda7d196bc2b7aa76e7bbbbc7a10a28116afc2e5be56"
      def install
        bin.install "cloudfleet" => "cloudfleet"

        # Install bash completion
        output = Utils.popen_read("#{bin}/cloudfleet completion bash")
        (bash_completion/"cloudfleet").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
        (zsh_completion/"_cloudfleet").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://downloads.cloudfleet.ai/cli/0.6.15/cloudfleet_linux_arm64.zip"
      sha256 "8600da1db815b590a8b8c29db14bc2ee5494d54f957eb3ddf09499591c9357d8"
      def install
        bin.install "cloudfleet" => "cloudfleet"

        # Install bash completion
        output = Utils.popen_read("#{bin}/cloudfleet completion bash")
        (bash_completion/"cloudfleet").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
        (zsh_completion/"_cloudfleet").write output
      end
    end
  end
end

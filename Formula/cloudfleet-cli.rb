# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CloudfleetCli < Formula
  desc "Cloudfleet Command Line Interface"
  homepage "https://cloudfleet.ai"
  version "0.6.13"

  depends_on "kubernetes-cli" => :recommended

  on_macos do
    url "https://downloads.cloudfleet.ai/cli/0.6.13/cloudfleet_darwin_all.zip"
    sha256 "5cf2be0d6acb56e226a6b3860256988bb770172b4fd2b29ed58de379dfa78a71"

    def install
      bin.install "cloudfleet" => "cloudfleet"

      # Install bash completion
      output = Utils.popen_read("#{bin}/cloudfleet completion bash")
      (bash_completion/"cloudfleet").write output

      # Install zsh completion
      output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
      (zsh_completion/"_cloudfleet").write output
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://downloads.cloudfleet.ai/cli/0.6.13/cloudfleet_linux_amd64.zip"
      sha256 "22c7bd479ce46037994ed8455d9fdf8a076bfaef3f52afadf012ba1a5f494fda"
      def install
        bin.install "cloudfleet" => "cloudfleet"

        # Install bash completion
        output = Utils.popen_read("#{bin}/cloudfleet completion bash")
        (bash_completion/"cloudfleet").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
        (zsh_completion/"_cloudfleet").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://downloads.cloudfleet.ai/cli/0.6.13/cloudfleet_linux_arm64.zip"
      sha256 "fa3f655b722ade3175c519ea598e0e3983b17c86ecee37e3377239fd449d6b3c"
      def install
        bin.install "cloudfleet" => "cloudfleet"

        # Install bash completion
        output = Utils.popen_read("#{bin}/cloudfleet completion bash")
        (bash_completion/"cloudfleet").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
        (zsh_completion/"_cloudfleet").write output
      end
    end
  end
end

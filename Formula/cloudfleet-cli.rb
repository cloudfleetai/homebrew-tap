# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CloudfleetCli < Formula
  desc "Cloudfleet Command Line Interface"
  homepage "https://cloudfleet.ai"
  version "0.6.19"

  depends_on "kubernetes-cli" => :recommended

  on_macos do
    url "https://downloads.cloudfleet.ai/cli/0.6.19/cloudfleet_darwin_all.zip"
    sha256 "7a4f8ceae8c163d012d59796173db5a9d34c7901b6c9654e3c171da08cabfe78"

    def install
      bin.install "cloudfleet" => "cloudfleet"

      # Install bash completion
      output = Utils.popen_read("#{bin}/cloudfleet completion bash")
      (bash_completion/"cloudfleet").write output

      # Install zsh completion
      output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
      (zsh_completion/"_cloudfleet").write output
    end
  end

  on_linux do
    if Hardware::CPU.intel? && Hardware::CPU.is_64_bit?
      url "https://downloads.cloudfleet.ai/cli/0.6.19/cloudfleet_linux_amd64.zip"
      sha256 "89fbf975f925f8532bc016659707046c97835e1092a1e8e8c907a8fb4513b6b0"
      def install
        bin.install "cloudfleet" => "cloudfleet"

        # Install bash completion
        output = Utils.popen_read("#{bin}/cloudfleet completion bash")
        (bash_completion/"cloudfleet").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
        (zsh_completion/"_cloudfleet").write output
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://downloads.cloudfleet.ai/cli/0.6.19/cloudfleet_linux_arm64.zip"
      sha256 "95c06ae12066463ddbdda4d2cf9191cfaa3b248798e0320c7ae23134f001f0bc"
      def install
        bin.install "cloudfleet" => "cloudfleet"

        # Install bash completion
        output = Utils.popen_read("#{bin}/cloudfleet completion bash")
        (bash_completion/"cloudfleet").write output

        # Install zsh completion
        output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
        (zsh_completion/"_cloudfleet").write output
      end
    end
  end
end

# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class CloudfleetCli < Formula
  desc "Cloudfleet Command Line Interface"
  homepage "https://cloudfleet.ai"
  version "0.3.35"

  depends_on "kubernetes-cli" => :recommended

  on_macos do
    url "https://downloads.cloudfleet.ai/cli/0.3.35/cloudfleet_darwin_all.zip"
    sha256 "2865115c784589c5a99a15948707ae5af9f92bfc2779912ed6e0942dd1a2dc38"

    def install
      bin.install "cloudfleet" => "cloudfleet"

      # Install bash completion
      output = Utils.popen_read("#{bin}/cloudfleet completion bash")
      (bash_completion/"cloudfleet").write output

      # Install zsh completion
      output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
      (zsh_completion/"_cloudfleet").write output
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://downloads.cloudfleet.ai/cli/0.3.35/cloudfleet_linux_amd64.zip"
        sha256 "2531a340ee4bba634a01cbf1d6dcd0709307fb95d0bcb25b1ee2c3bb44663532"

        def install
          bin.install "cloudfleet" => "cloudfleet"

          # Install bash completion
          output = Utils.popen_read("#{bin}/cloudfleet completion bash")
          (bash_completion/"cloudfleet").write output

          # Install zsh completion
          output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
          (zsh_completion/"_cloudfleet").write output
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://downloads.cloudfleet.ai/cli/0.3.35/cloudfleet_linux_arm64.zip"
        sha256 "24d9b8f49c4f227272e9001d862cca5bd9e0f85e7b2f3e2115175a8a0ceee754"

        def install
          bin.install "cloudfleet" => "cloudfleet"

          # Install bash completion
          output = Utils.popen_read("#{bin}/cloudfleet completion bash")
          (bash_completion/"cloudfleet").write output

          # Install zsh completion
          output = Utils.popen_read("#{bin}/cloudfleet completion zsh")
          (zsh_completion/"_cloudfleet").write output
        end
      end
    end
  end
end
